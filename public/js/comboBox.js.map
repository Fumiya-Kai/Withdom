{"version":3,"file":"/js/comboBox.js","mappings":"oFAAAA,GAAE,WAEAA,EAAE,kBAAkBC,GAAG,SAAS,WAC9BD,EAAE,mBAAmBE,WAIvBF,EAAE,mBAAmBC,GAAG,WAAW,WACjCD,EAAE,kBAAkBG,UAItBH,EAAEI,UAAUH,GAAG,SAAQ,SAASI,GAC9B,GAAIL,EAAEK,EAAEC,QAAQC,QAAQ,kBAAkBC,QAAWR,EAAEK,EAAEC,QAAQC,QAAQ,mBAAmBC,QAAWR,EAAEK,EAAEC,QAAQC,QAAQ,kBAAkBC,OAOtI,GAAGR,EAAEK,EAAEC,QAAQC,QAAQ,kBAAkBC,OAAQ,CACtD,IAAIC,EAAmBT,EAAEK,EAAEC,QAAQI,SAAS,sBAAsBC,KAAK,WACvEX,EAAE,mBAAmBE,QACrBF,EAAEK,EAAEC,QAAQI,SAAS,sBAAsBC,KAAK,WAAYF,GAAkBG,cAE9EZ,EAAE,mBAAmBE,YAZ8H,CACnJ,GAAGF,EAAE,mBAAmBa,MAEtBC,EADmBd,EAAE,mBAAmBa,OAExCb,EAAE,mBAAmBa,IAAI,IAE3Bb,EAAE,kBAAkBe,WAWxBf,EAAE,sBAAsBY,QAAO,WAC7B,IAAII,EAAehB,EAAEiB,MAAMC,KAAK,QAChC,GAAGlB,EAAEiB,MAAMN,KAAK,WAAY,CAC1B,IAAIQ,EAAgBC,EAAYJ,GAChChB,EAAE,mBAAmBqB,OAAOF,OACvB,CACL,IAAIG,EAAY,mBAAH,OAAsBN,GACnChB,EAAEsB,GAAWC,aAKjB,IAAIC,EAAgB,GAkCpB,SAASJ,EAAYJ,GACnB,MAAO,qHAAP,OAA4HA,EAA5H,aAA6IA,EAA7I,UAOF,SAASF,EAAmBE,GAC1B,IAAIG,EAAgBC,EAAYJ,GAEhC,GADAhB,EAAE,mBAAmBqB,OAAOF,GACzBK,EAAcC,SAAST,GACxBU,iBAAmB1B,EAAE,kBAAD,OAAmBgB,IAAgBW,OACvDD,iBAAiBf,KAAK,WAAW,OAC5B,CACL,IAAIiB,EAXR,SAA2BZ,GACzB,MAAO,uDAAP,OAA8DA,EAA9D,4BAA8FA,EAA9F,MAUoBa,CAAkBb,GACpChB,EAAE,mBAAmB8B,MAAMF,IAjD/B5B,EAAE,kBAAkB+B,MAAK,SAASC,EAAGnB,GACnCW,EAAcS,KAAKjC,EAAEa,GAAKqB,WAI5BlC,EAAE,mBAAmBC,GAAG,YAAY,SAASI,GAC3C,GAAa,UAAVA,EAAE8B,IAAgB,CACnB,IAAInB,EAAehB,EAAE,mBAAmBa,MACxC,OAAGb,EAAE,mBAAD,OAAoBgB,IAAgBR,QACtCR,EAAE,mBAAmBa,IAAI,KAClB,IAETC,EAAmBE,GACnBhB,EAAE,mBAAmBa,IAAI,KAClB,OAKXb,EAAE,mBAAmBC,GAAG,WAAW,SAASI,GAC1C,GAAa,cAAVA,EAAE8B,KAAyD,IAAlCnC,EAAEiB,MAAMmB,IAAI,GAAGC,eAAqB,CAC9D,IAAIrB,EAAehB,EAAE,yBAAyBsC,OAAOJ,OACjDK,EAAW,eAAH,OAAkBvB,GAC9BhB,EAAEuC,GAAUhB,SACZvB,EAAE,yBAAyBsC,OAAOf,SAC/BC,EAAcC,SAAST,KACxBU,iBAAmB1B,EAAE,kBAAD,OAAmBgB,IAAgBW,OACvDD,iBAAiBf,KAAK,WAAW,a","sources":["webpack:///./resources/js/comboBox.js"],"sourcesContent":["$(function(){\n  // カテゴリーフォーム部分をクリックするとフォーカスが当たる\n  $('.category-form').on('click', function(){\n    $('.category-input').focus();\n  })\n\n  // フォーカスが当たるとリスト表示\n  $('.category-input').on('focusin', function(){\n    $('.category-list').show();\n  });\n\n  // リストクリック時の挙動\n  $(document).on('click',function(e) {\n    if(!$(e.target).closest('.category-list').length && !$(e.target).closest('.category-input').length && !$(e.target).closest('.category-form').length) {\n      if($('.category-input').val()) {\n        let categoryName = $('.category-input').val();\n        insertCategoryElem(categoryName);\n        $('.category-input').val('');\n      }\n      $('.category-list').hide();\n    } else if($(e.target).closest('.category-list').length) {\n      let statusOfCheckbox = $(e.target).children('.category-checkbox').prop('checked');\n      $('.category-input').focus();\n      $(e.target).children('.category-checkbox').prop('checked', !statusOfCheckbox).change();\n    } else {\n      $('.category-input').focus();\n    }\n  });\n\n  // チェックボックスチェック操作の挙動\n  $('.category-checkbox').change(function(){\n    let categoryName = $(this).data('name');\n    if($(this).prop('checked')) {\n      let categoryBadge = createBadge(categoryName);\n      $('.category-input').before(categoryBadge);\n    } else {\n      let elementId = `#category-badge-${categoryName}`;\n      $(elementId).remove();\n    }\n  })\n\n  // カテゴリーの配列を作成\n  let categoryItems = [];\n  $('.category-name').each(function(i, val) {\n    categoryItems.push($(val).text());\n  })\n\n  // 入力後のEnter時の挙動\n  $('.category-input').on('keypress', function(e){\n    if(e.key === 'Enter'){\n      let categoryName = $('.category-input').val();\n      if($(`#category-badge-${categoryName}`).length) {\n        $('.category-input').val('');\n        return false;\n      }\n      insertCategoryElem(categoryName);\n      $('.category-input').val('');\n      return false;\n    };\n  })\n\n  // backspaceによるタグ削除\n  $('.category-input').on('keydown', function(e){\n    if(e.key === 'Backspace' && $(this).get(0).selectionStart === 0){\n      let categoryName = $('.added-category-badge').last().text()\n      let hiddenId = `#hiddeninput${categoryName}`;\n      $(hiddenId).remove();\n      $('.added-category-badge').last().remove();\n      if(categoryItems.includes(categoryName)) {\n        categoryCheckbox = $(`#category-name-${categoryName}`).prev();\n        categoryCheckbox.prop('checked', false);\n      }\n    };\n  })\n\n  // タグ作成の関数\n  function createBadge(categoryName) {\n    return `<div class=\"added-category-badge badge rounded-pill bg-secondary bg-opacity-25 me-1 text-dark\" id=\"category-badge-${categoryName}\">${categoryName}</div>`;\n  }\n\n  function createHiddenInput(categoryName) {\n    return `<input name=\"new-categories[]\" type=\"hidden\" value=\"${categoryName}\" id=\"hiddeninput${categoryName}\">`;\n  }\n\n  function insertCategoryElem(categoryName) {\n    let categoryBadge = createBadge(categoryName);\n    $('.category-input').before(categoryBadge);\n    if(categoryItems.includes(categoryName)) {\n      categoryCheckbox = $(`#category-name-${categoryName}`).prev();\n      categoryCheckbox.prop('checked', true);\n    } else {\n      let newCategory = createHiddenInput(categoryName);\n      $('.category-input').after(newCategory);\n    }\n  }\n})"],"names":["$","on","focus","show","document","e","target","closest","length","statusOfCheckbox","children","prop","change","val","insertCategoryElem","hide","categoryName","this","data","categoryBadge","createBadge","before","elementId","remove","categoryItems","includes","categoryCheckbox","prev","newCategory","createHiddenInput","after","each","i","push","text","key","get","selectionStart","last","hiddenId"],"sourceRoot":""}